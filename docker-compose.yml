version: '3.8'
services:
  backend:
    build:
      context: ./Node
      dockerfile: Dockerfile
    # 端口不再需要暴露给宿主机，因为流量将通过 Nginx 代理
    # ports:
    #   - "${BACKEND_PORT}:5000"
    #   - "${WEBSOCKET_PORT}:9000"
    restart: always
    container_name: mpoe_backend
    depends_on:
      mysql_db:
        condition: service_healthy
    environment:
      - MYSQL_HOST=mysql_db
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}

  frontend:
    build:
      context: ./Vue
      dockerfile: Dockerfile
      args:
        - VITE_HTTP_SERVER_URL=${VITE_HTTP_SERVER_URL}
        - VITE_SOCKET_SERVER_URL=${VITE_SOCKET_SERVER_URL}
        - VITE_WS_SERVER_URL=${VITE_WS_SERVER_URL}
        - VITE_WS_PERMISSION_URL=${VITE_WS_PERMISSION_URL}
    ports:
      - "${FRONTEND_PORT}:80"
    depends_on:
      - backend
    restart: always
    container_name: mpoe_frontend

  mysql_db:
    image: mysql:8.0
    # 添加此命令来强制 MySQL 8 使用旧的、兼容性更强的密码认证插件
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    container_name: mpoe_mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      MYSQL_DATABASE: "${DB_NAME}"
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./Mysql/database.sql:/docker-entrypoint-initdb.d/init.sql

volumes:
  mysql-data: 